=begin
#PluralKit

#This is the API for [PluralKit](https://pluralkit.me/)! :)  The API itself is stable, but this document (the OpenAPI description) is still subject to change, and may be updated, corrected or restructured in the future (as long as it's still coherent with the real API).  # Authentication Authentication is handled using a \"system token\". At the moment, the only way to obtain a system token is to use the `pk;token` command through the Discord bot.  This will generate an opaque string you must pass as the `Authorization` header to API requests. Many API endpoints are available anonymously, but most of them will hide information from  unauthenticated requests to align with the relevant privacy settings.  # Errors Errors are just returned as HTTP response codes. Most error responses include a human-readable error message as the body, but this should not be relied on. Just read the response codes :)  # OpenAPI version history - **1.1**: Granular member privacy - **1.0**: (initial definition version) 

The version of the OpenAPI document: 1.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0-SNAPSHOT

=end

# Common files
require 'pluralkit-api/api_client'
require 'pluralkit-api/api_error'
require 'pluralkit-api/version'
require 'pluralkit-api/configuration'

# Models
require 'pluralkit-api/models/full_switch'
require 'pluralkit-api/models/member'
require 'pluralkit-api/models/message'
require 'pluralkit-api/models/privacy_setting'
require 'pluralkit-api/models/proxy_tag'
require 'pluralkit-api/models/switch'
require 'pluralkit-api/models/system'

# APIs
require 'pluralkit-api/api/accounts_api'
require 'pluralkit-api/api/members_api'
require 'pluralkit-api/api/proxying_api'
require 'pluralkit-api/api/switches_api'
require 'pluralkit-api/api/systems_api'

module PluralKitAPI
  class << self
    # Customize default settings for the SDK using block.
    #   PluralKitAPI.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
