=begin
#PluralKit

#This is the API for [PluralKit](https://pluralkit.me/)! :)  The API itself is stable, but this document (the OpenAPI description) is still subject to change, and may be updated, corrected or restructured in the future (as long as it's still coherent with the real API).  # Authentication Authentication is handled using a \"system token\". At the moment, the only way to obtain a system token is to use the `pk;token` command through the Discord bot.  This will generate an opaque string you must pass as the `Authorization` header to API requests. Many API endpoints are available anonymously, but most of them will hide information from  unauthenticated requests to align with the relevant privacy settings.  # Errors Errors are just returned as HTTP response codes. Most error responses include a human-readable error message as the body, but this should not be relied on. Just read the response codes :)  # OpenAPI version history - **1.1**: Granular member privacy - **1.0**: (initial definition version) 

The version of the OpenAPI document: 1.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for PluralKitAPI::MembersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MembersApi' do
  before do
    # run before each test
    @api_instance = PluralKitAPI::MembersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MembersApi' do
    it 'should create an instance of MembersApi' do
      expect(@api_instance).to be_instance_of(PluralKitAPI::MembersApi)
    end
  end

  # unit tests for create_member
  # Creates a new member in your system.
  # @param member 
  # @param [Hash] opts the optional parameters
  # @return [Member]
  describe 'create_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_member
  # Deletes a member.
  # @param id The ID of the member in question.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_member
  # Gets a member by their ID.
  # @param id The ID of the member in question.
  # @param [Hash] opts the optional parameters
  # @return [Member]
  describe 'get_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_system_members
  # Gets a system&#39;s members.
  # If the API token does not belong to this system, this list may exclude any private members in the system. 
  # @param id The ID of the system in question.
  # @param [Hash] opts the optional parameters
  # @return [Array<System>]
  describe 'get_system_members test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_member
  # Updates a member.
  # @param id The ID of the member in question.
  # @param member 
  # @param [Hash] opts the optional parameters
  # @return [Member]
  describe 'update_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
